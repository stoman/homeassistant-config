---
# Idasen desk control 
substitutions:
  desk_mac_address: "00:00:00:00:00:00"

external_components:
  source: github://j5lien/esphome-idasen-desk-controller@v4.0.0

esp32_ble_tracker:

globals:
  - id: ble_client_connected
    type: bool
    initial_value: "false"

ble_client:
  - mac_address: ${desk_mac_address}
    id: desk
    on_connect:
      then:
        # Update the Desk Connection Status
        - lambda: |-
            id(ble_client_connected) = true;
        - delay: 5s
        # Update desk height and speed sensors after bluetooth is connected
        - lambda: |-
            id(desk_height).update();
            id(desk_speed).update();
    on_disconnect:
      then:
        # Update the Desk Connection Status
        - lambda: |-
            id(ble_client_connected) = false;

idasen_desk_controller:
  ble_client_id: desk

cover:
  - platform: idasen_desk_controller
    name: "${prefix} Schreibtisch"

sensor:
  # Desk Height Sensor
  - platform: ble_client
    type: characteristic
    ble_client_id: desk
    id: desk_height
    name: "${prefix} Schreibtisch HÃ¶he"
    service_uuid: "99fa0020-338a-1024-8a49-009c0215f78a"
    characteristic_uuid: "99fa0021-338a-1024-8a49-009c0215f78a"
    icon: "mdi:arrow-up-down"
    unit_of_measurement: "cm"
    accuracy_decimals: 1
    update_interval: 30s
    notify: true
    lambda: |-
      uint16_t raw_height = ((uint16_t)x[1] << 8) | x[0];
      unsigned short height_mm = raw_height / 10 + 615;

      return (float) height_mm / 10;

  # Desk Speed Sensor
  - platform: ble_client
    type: characteristic
    ble_client_id: desk
    id: desk_speed
    name: "${prefix} Schreibtisch Geschwindigkeit"
    service_uuid: "99fa0020-338a-1024-8a49-009c0215f78a"
    characteristic_uuid: "99fa0021-338a-1024-8a49-009c0215f78a"
    icon: "mdi:speedometer"
    unit_of_measurement: "cm/min"
    accuracy_decimals: 0
    update_interval: 30s
    notify: true
    lambda: |-
      uint16_t raw_speed = ((uint16_t)x[3] << 8) | x[2];
      return raw_speed / 100;

binary_sensor:
  # Desk Bluetooth Connection Status
  - platform: template
    name: "${prefix} Schreibtisch Verbindung"
    id: desk_connection
    lambda: "return id(ble_client_connected);"

  # Desk Moving Status
  - platform: template
    name: "${prefix} Schreibtisch Bewegung"
    id: desk_moving
    lambda: "return id(desk_speed).state > 0;"